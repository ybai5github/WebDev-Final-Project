{"ast":null,"code":"import { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nimport { isSsr } from \"../../Utils\";\n\nclass PolygonMaskPlugin {\n  constructor() {\n    this.id = \"polygonMask\";\n  }\n\n  getPlugin(container) {\n    return new PolygonMaskInstance(container);\n  }\n\n  needsPlugin(options) {\n    var _a, _b, _c;\n\n    return (_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : ((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== \"none\";\n  }\n\n  loadOptions(options, source) {\n    if (!this.needsPlugin(source)) {\n      return;\n    }\n\n    const optionsCast = options;\n    let polygonOptions = optionsCast.polygon;\n\n    if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n      optionsCast.polygon = polygonOptions = new PolygonMask();\n    }\n\n    polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n  }\n\n}\n\nexport async function loadPolygonMaskPlugin(engine) {\n  if (!isSsr() && !(\"SVGPathSeg\" in window)) {\n    await import(\"./pathseg\");\n  }\n\n  const plugin = new PolygonMaskPlugin();\n  await engine.addPlugin(plugin);\n}","map":{"version":3,"sources":["/Users/felixyamano/Documents/NEU/CS5610/facerecognition/node_modules/tsparticles/esm/Plugins/PolygonMask/index.js"],"names":["PolygonMask","PolygonMaskInstance","isSsr","PolygonMaskPlugin","constructor","id","getPlugin","container","needsPlugin","options","_a","_b","_c","polygon","enable","type","undefined","loadOptions","source","optionsCast","polygonOptions","load","loadPolygonMaskPlugin","engine","window","plugin","addPlugin"],"mappings":"AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,KAAT,QAAsB,aAAtB;;AACA,MAAMC,iBAAN,CAAwB;AACpBC,EAAAA,WAAW,GAAG;AACV,SAAKC,EAAL,GAAU,aAAV;AACH;;AACDC,EAAAA,SAAS,CAACC,SAAD,EAAY;AACjB,WAAO,IAAIN,mBAAJ,CAAwBM,SAAxB,CAAP;AACH;;AACDC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,QAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AACA,WAAQ,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,OAAhE,MAA6E,IAA7E,IAAqFH,EAAE,KAAK,KAAK,CAAjG,GAAqG,KAAK,CAA1G,GAA8GA,EAAE,CAACI,MAAvH,MAAmI,IAAnI,IAA2IH,EAAE,KAAK,KAAK,CAAvJ,GAA2JA,EAA3J,GAAiK,CAAC,CAACC,EAAE,GAAGH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,OAAhE,MAA6E,IAA7E,IAAqFD,EAAE,KAAK,KAAK,CAAjG,GAAqG,KAAK,CAA1G,GAA8GA,EAAE,CAACG,IAAlH,MAA4HC,SAA5H,IAAyIP,OAAO,CAACI,OAAR,CAAgBE,IAAhB,KAAyB,MAA3U;AACH;;AACDE,EAAAA,WAAW,CAACR,OAAD,EAAUS,MAAV,EAAkB;AACzB,QAAI,CAAC,KAAKV,WAAL,CAAiBU,MAAjB,CAAL,EAA+B;AAC3B;AACH;;AACD,UAAMC,WAAW,GAAGV,OAApB;AACA,QAAIW,cAAc,GAAGD,WAAW,CAACN,OAAjC;;AACA,QAAI,CAACO,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACC,IAAhF,MAA0FL,SAA9F,EAAyG;AACrGG,MAAAA,WAAW,CAACN,OAAZ,GAAsBO,cAAc,GAAG,IAAIpB,WAAJ,EAAvC;AACH;;AACDoB,IAAAA,cAAc,CAACC,IAAf,CAAoBH,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACL,OAA3E;AACH;;AArBmB;;AAuBxB,OAAO,eAAeS,qBAAf,CAAqCC,MAArC,EAA6C;AAChD,MAAI,CAACrB,KAAK,EAAN,IAAY,EAAE,gBAAgBsB,MAAlB,CAAhB,EAA2C;AACvC,UAAM,OAAO,WAAP,CAAN;AACH;;AACD,QAAMC,MAAM,GAAG,IAAItB,iBAAJ,EAAf;AACA,QAAMoB,MAAM,CAACG,SAAP,CAAiBD,MAAjB,CAAN;AACH","sourcesContent":["import { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nimport { isSsr } from \"../../Utils\";\nclass PolygonMaskPlugin {\n    constructor() {\n        this.id = \"polygonMask\";\n    }\n    getPlugin(container) {\n        return new PolygonMaskInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        return ((_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : (((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== \"none\"));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let polygonOptions = optionsCast.polygon;\n        if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n            optionsCast.polygon = polygonOptions = new PolygonMask();\n        }\n        polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n    }\n}\nexport async function loadPolygonMaskPlugin(engine) {\n    if (!isSsr() && !(\"SVGPathSeg\" in window)) {\n        await import(\"./pathseg\");\n    }\n    const plugin = new PolygonMaskPlugin();\n    await engine.addPlugin(plugin);\n}\n"]},"metadata":{},"sourceType":"module"}