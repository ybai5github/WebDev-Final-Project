{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Container_engine;\n\nimport { EventListeners, FrameManager, Vector } from \"./Utils\";\nimport { animate, cancelAnimation, getRangeValue } from \"../Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this.id = id;\n\n    _Container_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Container_engine, engine, \"f\");\n\n    this.fpsLimit = 120;\n    this.duration = 0;\n    this.lifeTime = 0;\n    this.firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(__classPrivateFieldGet(this, _Container_engine, \"f\"), this);\n    this.drawer = new FrameManager(this);\n\n    for (var _len = arguments.length, presets = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      presets[_key - 3] = arguments[_key];\n    }\n\n    this.presets = presets;\n    this.pathGenerator = {\n      generate: () => {\n        const v = Vector.create(0, 0);\n        v.length = Math.random();\n        v.angle = Math.random() * Math.PI * 2;\n        return v;\n      },\n      init: () => {},\n      update: () => {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n    this.actualOptions = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n    this.eventListeners = new EventListeners(this);\n\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this.intersectionObserver = new IntersectionObserver(entries => this.intersectionManager(entries));\n    }\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n\n  play(force) {\n    const needsUpdate = this.paused || force;\n\n    if (this.firstStart && !this.actualOptions.autoPlay) {\n      this.firstStart = false;\n      return;\n    }\n\n    if (this.paused) {\n      this.paused = false;\n    }\n\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n\n    this.draw(needsUpdate || false);\n  }\n\n  pause() {\n    if (this.drawAnimationFrame !== undefined) {\n      cancelAnimation()(this.drawAnimationFrame);\n      delete this.drawAnimationFrame;\n    }\n\n    if (this.paused) {\n      return;\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.pause) {\n        plugin.pause();\n      }\n    }\n\n    if (!this.pageHidden) {\n      this.paused = true;\n    }\n  }\n\n  draw(force) {\n    let refreshTime = force;\n    this.drawAnimationFrame = animate()(async timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n\n      await this.drawer.nextFrame(timestamp);\n    });\n  }\n\n  getAnimationStatus() {\n    return !this.paused && !this.pageHidden;\n  }\n\n  setNoise(noiseOrGenerator, init, update) {\n    this.setPath(noiseOrGenerator, init, update);\n  }\n\n  setPath(pathOrGenerator, init, update) {\n    var _a, _b, _c;\n\n    if (!pathOrGenerator) {\n      return;\n    }\n\n    if (typeof pathOrGenerator === \"function\") {\n      this.pathGenerator.generate = pathOrGenerator;\n\n      if (init) {\n        this.pathGenerator.init = init;\n      }\n\n      if (update) {\n        this.pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = this.pathGenerator;\n      this.pathGenerator = pathOrGenerator;\n      (_a = this.pathGenerator).generate || (_a.generate = oldGenerator.generate);\n      (_b = this.pathGenerator).init || (_b.init = oldGenerator.init);\n      (_c = this.pathGenerator).update || (_c.update = oldGenerator.update);\n    }\n  }\n\n  destroy() {\n    this.stop();\n    this.canvas.destroy();\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.destroy) {\n        drawer.destroy(this);\n      }\n    }\n\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n\n    this.destroyed = true;\n  }\n\n  exportImg(callback) {\n    this.exportImage(callback);\n  }\n\n  exportImage(callback, type, quality) {\n    var _a;\n\n    return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n  }\n\n  exportConfiguration() {\n    return JSON.stringify(this.actualOptions, undefined, 2);\n  }\n\n  refresh() {\n    this.stop();\n    return this.start();\n  }\n\n  reset() {\n    this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n    return this.refresh();\n  }\n\n  stop() {\n    if (!this.started) {\n      return;\n    }\n\n    this.firstStart = true;\n    this.started = false;\n    this.eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.clear();\n\n    if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n      this.intersectionObserver.unobserve(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.stop) {\n        plugin.stop();\n      }\n    }\n\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n\n    this.particles.linksColors = new Map();\n    delete this.particles.grabLineColor;\n    delete this.particles.linksColor;\n    this._sourceOptions = this._options;\n  }\n\n  async loadTheme(name) {\n    this.currentTheme = name;\n    await this.refresh();\n  }\n\n  async start() {\n    if (this.started) {\n      return;\n    }\n\n    await this.init();\n    this.started = true;\n    this.eventListeners.addListeners();\n\n    if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n      this.intersectionObserver.observe(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.startAsync !== undefined) {\n        await plugin.startAsync();\n      } else if (plugin.start !== undefined) {\n        plugin.start();\n      }\n    }\n\n    this.play();\n  }\n\n  addClickHandler(callback) {\n    const el = this.interactivity.element;\n\n    if (!el) {\n      return;\n    }\n\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const pxRatio = this.retina.pixelRatio,\n            posRetina = {\n        x: pos.x * pxRatio,\n        y: pos.y * pxRatio\n      },\n            particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n\n    const clickHandler = e => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const mouseEvent = e;\n      const pos = {\n        x: mouseEvent.offsetX || mouseEvent.clientX,\n        y: mouseEvent.offsetY || mouseEvent.clientY\n      };\n      clickOrTouchHandler(e, pos, 1);\n    };\n\n    const touchStartHandler = () => {\n      if (this.destroyed) {\n        return;\n      }\n\n      touched = true;\n      touchMoved = false;\n    };\n\n    const touchMoveHandler = () => {\n      if (this.destroyed) {\n        return;\n      }\n\n      touchMoved = true;\n    };\n\n    const touchEndHandler = e => {\n      var _a, _b, _c;\n\n      if (this.destroyed) {\n        return;\n      }\n\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n\n          if (!lastTouch) {\n            return;\n          }\n        }\n\n        const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n        const pos = {\n          x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n          y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n        };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    const touchCancelHandler = () => {\n      if (this.destroyed) {\n        return;\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    let touched = false;\n    let touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this.currentTheme);\n\n    if (this.responsiveMaxWidth != newMaxWidth) {\n      this.responsiveMaxWidth = newMaxWidth;\n      return true;\n    }\n\n    return false;\n  }\n\n  async init() {\n    this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n\n    for (const preset of this.presets) {\n      this._options.load(__classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getPreset(preset));\n    }\n\n    const shapes = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getSupportedShapes();\n\n    for (const type of shapes) {\n      const drawer = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getShapeDrawer(type);\n\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n\n    this._options.load(this._initialSourceOptions);\n\n    this._options.load(this._sourceOptions);\n\n    this.actualOptions = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n    this.actualOptions.load(this._options);\n    this.retina.init();\n    this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this.duration = getRangeValue(this.actualOptions.duration);\n    this.lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n\n    const availablePlugins = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getAvailablePlugins(this);\n\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.init) {\n        await drawer.init(this);\n      }\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.init) {\n        plugin.init(this.actualOptions);\n      } else if (plugin.initAsync !== undefined) {\n        await plugin.initAsync(this.actualOptions);\n      }\n    }\n\n    const pathOptions = this.actualOptions.particles.move.path;\n\n    if (pathOptions.generator) {\n      this.setPath(__classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getPathGenerator(pathOptions.generator));\n    }\n\n    this.particles.init();\n    this.particles.setDensity();\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.particlesSetup !== undefined) {\n        plugin.particlesSetup();\n      }\n    }\n  }\n\n  intersectionManager(entries) {\n    if (!this.actualOptions.pauseOnOutsideViewport) {\n      return;\n    }\n\n    for (const entry of entries) {\n      if (entry.target !== this.interactivity.element) {\n        continue;\n      }\n\n      if (entry.isIntersecting) {\n        this.play();\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n}\n_Container_engine = new WeakMap();","map":{"version":3,"sources":["/Users/felixyamano/Documents/NEU/CS5610/facerecognition/node_modules/tsparticles/esm/Core/Container.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Container_engine","EventListeners","FrameManager","Vector","animate","cancelAnimation","getRangeValue","Canvas","Options","Particles","Retina","Container","constructor","engine","id","sourceOptions","fpsLimit","duration","lifeTime","firstStart","started","destroyed","paused","lastFrameTime","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","particles","drawer","presets","pathGenerator","generate","v","create","length","Math","random","angle","PI","init","update","interactivity","mouse","clicking","inside","bubble","repulse","attract","plugins","Map","drawers","density","_options","actualOptions","eventListeners","IntersectionObserver","intersectionObserver","entries","intersectionManager","options","play","force","needsUpdate","autoPlay","plugin","draw","pause","drawAnimationFrame","undefined","refreshTime","timestamp","nextFrame","getAnimationStatus","setNoise","noiseOrGenerator","setPath","pathOrGenerator","_a","_b","_c","oldGenerator","destroy","stop","key","keys","delete","exportImg","callback","exportImage","type","quality","element","toBlob","exportConfiguration","JSON","stringify","refresh","start","reset","removeListeners","clear","HTMLElement","unobserve","linksColors","grabLineColor","linksColor","loadTheme","name","currentTheme","addListeners","observe","startAsync","addClickHandler","el","clickOrTouchHandler","e","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","left","top","max","radiusX","radiusY","touchCancelHandler","addEventListener","updateActualOptions","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth","preset","load","getPreset","shapes","getSupportedShapes","getShapeDrawer","initBackground","resize","availablePlugins","getAvailablePlugins","initAsync","pathOptions","move","path","generator","getPathGenerator","setDensity","particlesSetup","pauseOnOutsideViewport","entry","target","isIntersecting","WeakMap"],"mappings":"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","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Container_engine;\nimport { EventListeners, FrameManager, Vector } from \"./Utils\";\nimport { animate, cancelAnimation, getRangeValue } from \"../Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nexport class Container {\n    constructor(engine, id, sourceOptions, ...presets) {\n        this.id = id;\n        _Container_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Container_engine, engine, \"f\");\n        this.fpsLimit = 120;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this.firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(__classPrivateFieldGet(this, _Container_engine, \"f\"), this);\n        this.drawer = new FrameManager(this);\n        this.presets = presets;\n        this.pathGenerator = {\n            generate: () => {\n                const v = Vector.create(0, 0);\n                v.length = Math.random();\n                v.angle = Math.random() * Math.PI * 2;\n                return v;\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        this.actualOptions = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        this.eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this.intersectionObserver = new IntersectionObserver((entries) => this.intersectionManager(entries));\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.firstStart && !this.actualOptions.autoPlay) {\n            this.firstStart = false;\n            return;\n        }\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this.draw(needsUpdate || false);\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            cancelAnimation()(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw(force) {\n        let refreshTime = force;\n        this.drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.drawer.nextFrame(timestamp);\n        });\n    }\n    getAnimationStatus() {\n        return !this.paused && !this.pageHidden;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        var _a, _b, _c;\n        if (!pathOrGenerator) {\n            return;\n        }\n        if (typeof pathOrGenerator === \"function\") {\n            this.pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                this.pathGenerator.init = init;\n            }\n            if (update) {\n                this.pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = this.pathGenerator;\n            this.pathGenerator = pathOrGenerator;\n            (_a = this.pathGenerator).generate || (_a.generate = oldGenerator.generate);\n            (_b = this.pathGenerator).init || (_b.init = oldGenerator.init);\n            (_c = this.pathGenerator).update || (_c.update = oldGenerator.update);\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, undefined, 2);\n    }\n    refresh() {\n        this.stop();\n        return this.start();\n    }\n    reset() {\n        this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        return this.refresh();\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.firstStart = true;\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this.particles.linksColors = new Map();\n        delete this.particles.grabLineColor;\n        delete this.particles.linksColor;\n        this._sourceOptions = this._options;\n    }\n    async loadTheme(name) {\n        this.currentTheme = name;\n        await this.refresh();\n    }\n    async start() {\n        if (this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        this.eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.startAsync !== undefined) {\n                await plugin.startAsync();\n            }\n            else if (plugin.start !== undefined) {\n                plugin.start();\n            }\n        }\n        this.play();\n    }\n    addClickHandler(callback) {\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (this.destroyed) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (this.destroyed) {\n                return;\n            }\n            const mouseEvent = e;\n            const pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            var _a, _b, _c;\n            if (this.destroyed) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n                const pos = {\n                    x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                    y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false;\n        let touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this.currentTheme);\n        if (this.responsiveMaxWidth != newMaxWidth) {\n            this.responsiveMaxWidth = newMaxWidth;\n            return true;\n        }\n        return false;\n    }\n    async init() {\n        this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        for (const preset of this.presets) {\n            this._options.load(__classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getPreset(preset));\n        }\n        const shapes = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options.load(this._initialSourceOptions);\n        this._options.load(this._sourceOptions);\n        this.actualOptions = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        this.actualOptions.load(this._options);\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration);\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        const availablePlugins = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                plugin.init(this.actualOptions);\n            }\n            else if (plugin.initAsync !== undefined) {\n                await plugin.initAsync(this.actualOptions);\n            }\n        }\n        const pathOptions = this.actualOptions.particles.move.path;\n        if (pathOptions.generator) {\n            this.setPath(__classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getPathGenerator(pathOptions.generator));\n        }\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup !== undefined) {\n                plugin.particlesSetup();\n            }\n        }\n    }\n    intersectionManager(entries) {\n        if (!this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            if (entry.isIntersecting) {\n                this.play();\n            }\n            else {\n                this.pause();\n            }\n        }\n    }\n}\n_Container_engine = new WeakMap();\n"]},"metadata":{},"sourceType":"module"}