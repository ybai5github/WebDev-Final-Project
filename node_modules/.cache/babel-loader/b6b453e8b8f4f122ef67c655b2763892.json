{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseFilter = void 0;\n\nclass BaseFilter {\n  async sendMetadata(metadata) {\n    return metadata;\n  }\n\n  receiveMetadata(metadata) {\n    return metadata;\n  }\n\n  async sendMessage(message) {\n    return message;\n  }\n\n  async receiveMessage(message) {\n    return message;\n  }\n\n  receiveTrailers(status) {\n    return status;\n  }\n\n  refresh() {}\n\n}\n\nexports.BaseFilter = BaseFilter;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;AAsCA,MAAsBA,UAAtB,CAAgC;AACZ,QAAZC,YAAY,CAACC,QAAD,EAA4B;AAC5C,WAAOA,QAAP;AACD;;AAEDC,iBAAe,CAACD,QAAD,EAAmB;AAChC,WAAOA,QAAP;AACD;;AAEgB,QAAXE,WAAW,CAACC,OAAD,EAA8B;AAC7C,WAAOA,OAAP;AACD;;AAEmB,QAAdC,cAAc,CAACD,OAAD,EAAyB;AAC3C,WAAOA,OAAP;AACD;;AAEDE,iBAAe,CAACC,MAAD,EAAqB;AAClC,WAAOA,MAAP;AACD;;AAEDC,SAAO,IAAW;;AArBY;;AAAhCC","names":["BaseFilter","sendMetadata","metadata","receiveMetadata","sendMessage","message","receiveMessage","receiveTrailers","status","refresh","exports"],"sources":["/Users/felixyamano/Documents/NEU/CS5610/facerecognition/node_modules/@grpc/grpc-js/src/filter.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Call, StatusObject, WriteObject } from './call-stream';\nimport { Metadata } from './metadata';\n\n/**\n * Filter classes represent related per-call logic and state that is primarily\n * used to modify incoming and outgoing data\n */\nexport interface Filter {\n  sendMetadata(metadata: Promise<Metadata>): Promise<Metadata>;\n\n  receiveMetadata(metadata: Metadata): Metadata;\n\n  sendMessage(message: Promise<WriteObject>): Promise<WriteObject>;\n\n  receiveMessage(message: Promise<Buffer>): Promise<Buffer>;\n\n  receiveTrailers(status: StatusObject): StatusObject;\n\n  refresh(): void;\n}\n\nexport abstract class BaseFilter implements Filter {\n  async sendMetadata(metadata: Promise<Metadata>): Promise<Metadata> {\n    return metadata;\n  }\n\n  receiveMetadata(metadata: Metadata): Metadata {\n    return metadata;\n  }\n\n  async sendMessage(message: Promise<WriteObject>): Promise<WriteObject> {\n    return message;\n  }\n\n  async receiveMessage(message: Promise<Buffer>): Promise<Buffer> {\n    return message;\n  }\n\n  receiveTrailers(status: StatusObject): StatusObject {\n    return status;\n  }\n\n  refresh(): void {}\n}\n\nexport interface FilterFactory<T extends Filter> {\n  createFilter(callStream: Call): T;\n}\n"]},"metadata":{},"sourceType":"script"}