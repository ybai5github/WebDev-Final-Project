{"ast":null,"code":"var _jsxFileName = \"/Users/felixyamano/Documents/NEU/CS5610/facerecognition/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\n/* import Particles from \"react-tsparticles\"; */\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entry: 0,\n    joined: ''\n  }\n};\n\nconst App = () => {\n  _s();\n\n  /* const particlesInit = (main) => {\n    console.log(main);\n     // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  };\n  const particlesLoaded = (container) => {\n    console.log(container);\n  }; */\n\n  /*  const [imageURL, setURL] = useState('');\n    const [input, setInput] = useState('');\n    const [box, setBox] = useState({});\n    const [route, setRoute] = useState('signin');\n    const [isSignedIn, setSignedIn] = useState(false);\n    const [users, setUsers] = useState(\n     {\n       id: '',\n       name: '',\n       email: '',\n       entry: 0,\n       joined: ''\n     }\n   );\n  */\n  const [initial, setInitialState] = useState(initialState);\n  /* const LoadUser = (data) => {\n    setUsers({\n      ...users,\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }); */\n\n  const LoadUser = data => {\n    const updateUsers = [...users, {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }];\n    setUsers(updateUsers);\n  };\n\n  console.log('name', users.name);\n  console.log('entries', users.entry);\n  console.log('email', users.email);\n  /*  useEffect(()=>{\n     fetch('http://localhost:4000/')\n     .then(response=> response.json())\n     .then(data => console.log(data))\n   }) */\n\n  const onInputChange = event => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  };\n\n  const calculateFaceLocation = data => {\n    const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log('width', width);\n    console.log('height', height);\n    console.log('leftColl', clarifaiFace.left_col);\n    console.log('TopRow', clarifaiFace.top_row);\n    console.log('right_col', clarifaiFace.right_col);\n    console.log('bottom_row', clarifaiFace.bottom_row);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = box => {\n    console.log(box);\n    setBox(box);\n  };\n\n  const onRouteChange = route => {\n    if (route === 'signout') {\n      setSignedIn(false);\n    } else if (route === 'home') {\n      setSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  const onSubmit = () => {\n    setURL(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"1028693\",\n        \"app_id\": \"bd6ab4db310c42dba83a7791fb6efa3b\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": input\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 2f27d84734af45cf9458d0dbab0c600d'\n      },\n      body: raw\n    }; // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/a403429f2ddf4b49b307e318f00e528b/outputs\", requestOptions).then(response => response.text()).then(response => {\n      if (response) {\n        fetch('http://localhost:4000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: users.id\n          })\n        });\n      }\n\n      displayFaceBox(calculateFaceLocation(response));\n    }).catch(error => console.log('error', error));\n    /* .then(result => console.log(JSON.parse(result, null, 2).outputs[0].data.regions[0]\n    .region_info.bounding_box)) */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      isSignedIn: initialState,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: users.name,\n        entries: users.entry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: box,\n        imageURL: imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n      LoadUser: LoadUser,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }, this) : route === 'signout' ? /*#__PURE__*/_jsxDEV(Signin, {\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      LoadUser: LoadUser,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rGnMF0263W4kg3GScaYQ2rCEx2c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/felixyamano/Documents/NEU/CS5610/facerecognition/src/App.js"],"names":["React","useState","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","initialState","input","imageURL","box","route","isSignedIn","user","id","name","email","entry","joined","App","initial","setInitialState","LoadUser","data","updateUsers","users","setUsers","console","log","onInputChange","event","target","value","setInput","calculateFaceLocation","clarifaiFace","JSON","parse","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","left_col","top_row","right_col","bottom_row","leftCol","topRow","rightCol","bottomRow","displayFaceBox","setBox","onRouteChange","setSignedIn","setRoute","onSubmit","setURL","raw","stringify","requestOptions","method","headers","body","fetch","then","response","text","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA;;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,GAAG,EAAE,EAHc;AAInBC,EAAAA,KAAK,EAAE,QAJY;AAKnBC,EAAAA,UAAU,EAAE,KALO;AAMnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,EADA;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,KAAK,EAAE,CAJH;AAKJC,IAAAA,MAAM,EAAE;AALJ;AANa,CAArB;;AAeA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACF;AACA;AACA;AACA;AACA;AACA;;AAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAME,QAAM,CAACC,OAAD,EAAUC,eAAV,IAA6BtB,QAAQ,CAACQ,YAAD,CAA3C;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMe,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMC,WAAW,GAAG,CAClB,GAAGC,KADe,EAElB;AACEX,MAAAA,EAAE,EAAES,IAAI,CAACT,EADX;AAEEC,MAAAA,IAAI,EAAEQ,IAAI,CAACR,IAFb;AAGEC,MAAAA,KAAK,EAAEO,IAAI,CAACP,KAHd;AAIEC,MAAAA,KAAK,EAAEM,IAAI,CAACN,KAJd;AAKEC,MAAAA,MAAM,EAAEK,IAAI,CAACL;AALf,KAFkB,CAApB;AAWAQ,IAAAA,QAAQ,CAACF,WAAD,CAAR;AACD,GAbD;;AAgBAG,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,KAAK,CAACV,IAA1B;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAK,CAACR,KAA7B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACT,KAA3B;AAEA;AACF;AACA;AACA;AACA;;AAIE,QAAMa,aAAa,GAAIC,KAAD,IAAW;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAC,IAAAA,QAAQ,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAHD;;AAKA,QAAME,qBAAqB,GAAIX,IAAD,IAAU;AACtC,UAAMY,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWd,IAAX,EAAiB,IAAjB,EAAuB,CAAvB,EAA0Be,OAA1B,CAAkC,CAAlC,EAAqCf,IAArC,CAA0CgB,OAA1C,CAAkD,CAAlD,EAClBC,WADkB,CACNC,YADf;AAEA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,UAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiB,KAArB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBmB,MAAtB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,YAAY,CAACa,QAArC;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,YAAY,CAACc,OAAnC;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBO,YAAY,CAACe,SAAtC;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BO,YAAY,CAACgB,UAAvC;AAEA,WAAO;AACLC,MAAAA,OAAO,EAAEjB,YAAY,CAACa,QAAb,GAAwBH,KAD5B;AAELQ,MAAAA,MAAM,EAAElB,YAAY,CAACc,OAAb,GAAuBF,MAF1B;AAGLO,MAAAA,QAAQ,EAAET,KAAK,GAAIV,YAAY,CAACe,SAAb,GAAyBL,KAHvC;AAILU,MAAAA,SAAS,EAAER,MAAM,GAAIZ,YAAY,CAACgB,UAAb,GAA0BJ;AAJ1C,KAAP;AAMD,GAnBD;;AAqBA,QAAMS,cAAc,GAAI9C,GAAD,IAAS;AAC9BiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAZ;AACA+C,IAAAA,MAAM,CAAC/C,GAAD,CAAN;AAED,GAJD;;AAMA,QAAMgD,aAAa,GAAI/C,KAAD,IAAW;AAC/B,QAAIA,KAAK,KAAK,SAAd,EAAyB;AACvBgD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAEO,IAAIhD,KAAK,KAAK,MAAd,EAAsB;AAC3BgD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDC,IAAAA,QAAQ,CAACjD,KAAD,CAAR;AACD,GAPD;;AASA,QAAMkD,QAAQ,GAAG,MAAM;AACrBC,IAAAA,MAAM,CAACtD,KAAD,CAAN;AAEA,UAAMuD,GAAG,GAAG3B,IAAI,CAAC4B,SAAL,CAAe;AACzB,qBAAe;AACb,mBAAW,SADE;AAEb,kBAAU;AAFG,OADU;AAKzB,gBAAU,CACR;AACE,gBAAQ;AACN,mBAAS;AACP,mBAAOxD;AADA;AADH;AADV,OADQ;AALe,KAAf,CAAZ;AAgBA,UAAMyD,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,yBAAiB;AAFV,OAFY;AAMrBC,MAAAA,IAAI,EAAEL;AANe,KAAvB,CAnBqB,CA4BrB;AACA;AACA;;AAEAM,IAAAA,KAAK,CAAC,6EAAD,EAAgFJ,cAAhF,CAAL,CACGK,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIA,QAAJ,EAAc;AACZF,QAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCH,UAAAA,MAAM,EAAE,KAD2B;AAEnCC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAF0B;AAGnCC,UAAAA,IAAI,EAAEhC,IAAI,CAAC4B,SAAL,CAAe;AACnBlD,YAAAA,EAAE,EAAEW,KAAK,CAACX;AADS,WAAf;AAH6B,SAAhC,CAAL;AAOD;;AACD0C,MAAAA,cAAc,CAACtB,qBAAqB,CAACqC,QAAD,CAAtB,CAAd;AACD,KAbH,EAcGE,KAdH,CAcSC,KAAK,IAAI/C,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB8C,KAArB,CAdlB;AAgBA;AACJ;AAEG,GAnDD;;AAqDA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAgFE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEnE,YAAxB;AAAsC,MAAA,aAAa,EAAEmD;AAArD;AAAA;AAAA;AAAA;AAAA,YAhFF,EAiFG/C,KAAK,KAAK,MAAV,gBACG;AAAA,mCAAM,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAN,eACA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEc,KAAK,CAACV,IAAlB;AAAwB,QAAA,OAAO,EAAEU,KAAK,CAACR;AAAvC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,aAAD;AAAe,QAAA,aAAa,EAAEY,aAA9B;AAA6C,QAAA,QAAQ,EAAEgC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAEnD,GAAtB;AAA2B,QAAA,QAAQ,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAOGE,KAAK,KAAK,QAAV,gBACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEW,QAAlB;AAA4B,MAAA,aAAa,EAAEoC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,GAEK/C,KAAK,KAAK,SAAV,gBACC,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAE+C;AAAvB;AAAA;AAAA;AAAA;AAAA,YADD,gBAEC,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEpC,QAApB;AAA8B,MAAA,aAAa,EAAEoC;AAA7C;AAAA;AAAA;AAAA;AAAA,YA5FZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqGD,CA3QD;;GAAMvC,G;;KAAAA,G;AA6QN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\n/* import Particles from \"react-tsparticles\"; */\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entry: 0,\n    joined: ''\n  }\n}\n\nconst App = () => {\n  /* const particlesInit = (main) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  };\n  const particlesLoaded = (container) => {\n    console.log(container);\n  }; */\n\n /*  const [imageURL, setURL] = useState('');\n\n  const [input, setInput] = useState('');\n\n  const [box, setBox] = useState({});\n\n  const [route, setRoute] = useState('signin');\n\n  const [isSignedIn, setSignedIn] = useState(false);\n\n  const [users, setUsers] = useState(\n    {\n      id: '',\n      name: '',\n      email: '',\n      entry: 0,\n      joined: ''\n    }\n  );\n */\n  const [initial, setInitialState] = useState(initialState);\n\n\n\n  /* const LoadUser = (data) => {\n    setUsers({\n      ...users,\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }); */\n\n  const LoadUser = (data) => {\n    const updateUsers = [\n      ...users,\n      {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entry: data.entry,\n        joined: data.joined\n      }\n    ];\n\n    setUsers(updateUsers);\n  }\n\n\n  console.log('name', users.name);\n  console.log('entries', users.entry);\n  console.log('email', users.email);\n\n  /*  useEffect(()=>{\n     fetch('http://localhost:4000/')\n     .then(response=> response.json())\n     .then(data => console.log(data))\n   }) */\n\n\n\n  const onInputChange = (event) => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  }\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0]\n      .region_info.bounding_box;\n    const image = document.getElementById(\"image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log('width', width);\n    console.log('height', height);\n    console.log('leftColl', clarifaiFace.left_col);\n    console.log('TopRow', clarifaiFace.top_row);\n    console.log('right_col', clarifaiFace.right_col);\n    console.log('bottom_row', clarifaiFace.bottom_row);\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    };\n  }\n\n  const displayFaceBox = (box) => {\n    console.log(box);\n    setBox(box);\n\n  }\n\n  const onRouteChange = (route) => {\n    if (route === 'signout') {\n      setSignedIn(false);\n    } else if (route === 'home') {\n      setSignedIn(true);\n    }\n    setRoute(route);\n  }\n\n  const onSubmit = () => {\n    setURL(input);\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"1028693\",\n        \"app_id\": \"bd6ab4db310c42dba83a7791fb6efa3b\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": input\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 2f27d84734af45cf9458d0dbab0c600d'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/a403429f2ddf4b49b307e318f00e528b/outputs\", requestOptions)\n      .then((response) => response.text())\n      .then((response) => {\n        if (response) {\n          fetch('http://localhost:4000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: users.id\n            })\n          })\n        }\n        displayFaceBox(calculateFaceLocation(response))\n      })\n      .catch(error => console.log('error', error));\n\n    /* .then(result => console.log(JSON.parse(result, null, 2).outputs[0].data.regions[0]\n    .region_info.bounding_box)) */\n\n  }\n\n  return (\n    <div className=\"App\">\n      {/*  <Particles className='particles'\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={{\n          fpsLimit: 120,\n          interactivity: {\n            events: {\n              onClick: {\n                enable: true,\n                mode: \"push\",\n              },\n              onHover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              bubble: {\n                distance: 400,\n                duration: 2,\n                opacity: 0.8,\n                size: 40,\n              },\n              push: {\n                quantity: 4,\n              },\n              repulse: {\n                distance: 200,\n                duration: 0.4,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#ffffff\",\n            },\n            links: {\n              color: \"#ffffff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1,\n            },\n            collisions: {\n              enable: true,\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 2,\n              straight: false,\n            },\n            number: {\n              density: {\n                enable: true,\n                area: 800,\n              },\n              value: 80,\n            },\n            opacity: {\n              value: 0.5,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              random: true,\n              value: 5,\n            },\n          },\n          detectRetina: true,\n        }}\n\n      /> */}\n\n      <Navigation isSignedIn={initialState} onRouteChange={onRouteChange} />\n      {route === 'home'\n        ? <div> <Logo />\n          <Rank name={users.name} entries={users.entry} />\n          <ImageLinkForm onInputChange={onInputChange} onSubmit={onSubmit} />\n          <FaceRecognition box={box} imageURL={imageURL} />\n        </div>\n        : (\n          route === 'signin'\n            ? <Signin LoadUser={LoadUser} onRouteChange={onRouteChange} />\n            : (route === 'signout'\n              ? <Signin onRouteChange={onRouteChange} />\n              : <Register LoadUser={LoadUser} onRouteChange={onRouteChange} />\n            )\n        )\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}