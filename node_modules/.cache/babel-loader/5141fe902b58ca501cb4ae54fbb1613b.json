{"ast":null,"code":"var _jsxFileName = \"/Users/felixyamano/Documents/NEU/CS5610/web-dev-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { BrowserRouter, Route, Routes, Link } from \"react-router-dom\";\nimport Profile from './components/Profile/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [imageURL, setURL] = useState('');\n  const [input, setInput] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [users, setUsers] = useState({\n    id: '',\n    name: '',\n    email: '',\n    entry: 0,\n    joined: ''\n  });\n  /* const LoadUser = (data) => {\n    setUsers({\n      ...users,\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }); */\n\n  const LoadUser = data => {\n    const updateUsers = [...users, {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }];\n    setUsers(updateUsers);\n  };\n\n  console.log('name', users.name);\n  console.log('entries', users.entry);\n  console.log('email', users.email);\n  /*  useEffect(()=>{\n     fetch('http://localhost:4000/')\n     .then(response=> response.json())\n     .then(data => console.log(data))\n   }) */\n\n  const onInputChange = event => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  };\n\n  const onRouteChange = route => {\n    if (route === 'signout') {\n      setSignedIn(false);\n    } else if (route === 'home') {\n      setSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  const onSubmit = () => {\n    setURL(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"1028693\",\n        \"app_id\": \"bd6ab4db310c42dba83a7791fb6efa3b\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": input\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 2f27d84734af45cf9458d0dbab0c600d'\n      },\n      body: raw\n    }; // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/a403429f2ddf4b49b307e318f00e528b/outputs\", requestOptions).then(response => response.text()).then(response => {\n      if (response) {\n        fetch('http://localhost:4000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: users.id\n          })\n        });\n      }\n    }).catch(error => console.log('error', error));\n    /* .then(result => console.log(JSON.parse(result, null, 2).outputs[0].data.regions[0]\n    .region_info.bounding_box)) */\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"login\",\n            element: /*#__PURE__*/_jsxDEV(Signin, {\n              LoadUser: LoadUser,\n              onRouteChange: onRouteChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n  /*  {\n     <div className=\"App\">\n      <Navigation isSignedIn={isSignedIn} onRouteChange={onRouteChange} />\n     {route === 'home'\n       ? <div>\n         <Home />\n       </div>\n       : (\n         route === 'signin'\n           ? <Signin LoadUser={LoadUser} onRouteChange={onRouteChange} />\n           : (route === 'signout'\n             ? <Signin onRouteChange={onRouteChange} />\n             : <Register LoadUser={LoadUser} onRouteChange={onRouteChange} />\n           )\n       )\n      }\n    </div>\n   } */\n};\n\n_s(App, \"f7KD2fxKNK3CtwhzIbBrIQVEjd4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/felixyamano/Documents/NEU/CS5610/web-dev-project/src/App.js"],"names":["React","useState","Navigation","Home","Signin","Register","BrowserRouter","Route","Routes","Link","Profile","App","imageURL","setURL","input","setInput","box","setBox","route","setRoute","isSignedIn","setSignedIn","users","setUsers","id","name","email","entry","joined","LoadUser","data","updateUsers","console","log","onInputChange","event","target","value","onRouteChange","onSubmit","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,IAAvC,QAAmD,kBAAnD;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,MAAX,IAAqBZ,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,QAAD,CAAlC;AAEA,QAAM,CAACmB,UAAD,EAAaC,WAAb,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAChC;AACEuB,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,KAAK,EAAE,CAJT;AAKEC,IAAAA,MAAM,EAAE;AALV,GADgC,CAAlC;AAUA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMC,WAAW,GAAG,CAClB,GAAGT,KADe,EAElB;AACEE,MAAAA,EAAE,EAAEM,IAAI,CAACN,EADX;AAEEC,MAAAA,IAAI,EAAEK,IAAI,CAACL,IAFb;AAGEC,MAAAA,KAAK,EAAEI,IAAI,CAACJ,KAHd;AAIEC,MAAAA,KAAK,EAAEG,IAAI,CAACH,KAJd;AAKEC,MAAAA,MAAM,EAAEE,IAAI,CAACF;AALf,KAFkB,CAApB;AAWAL,IAAAA,QAAQ,CAACQ,WAAD,CAAR;AACD,GAbD;;AAgBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBX,KAAK,CAACG,IAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,KAAK,CAACK,KAA7B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,KAAK,CAACI,KAA3B;AAEA;AACF;AACA;AACA;AACA;;AAIE,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAtB,IAAAA,QAAQ,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAHD;;AAOA,QAAMC,aAAa,GAAIpB,KAAD,IAAW;AAC/B,QAAIA,KAAK,KAAK,SAAd,EAAyB;AACvBG,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAEO,IAAIH,KAAK,KAAK,MAAd,EAAsB;AAC3BG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDF,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAPD;;AASA,QAAMqB,QAAQ,GAAG,MAAM;AACrB1B,IAAAA,MAAM,CAACC,KAAD,CAAN;AAEA,UAAM0B,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AACzB,qBAAe;AACb,mBAAW,SADE;AAEb,kBAAU;AAFG,OADU;AAKzB,gBAAU,CACR;AACE,gBAAQ;AACN,mBAAS;AACP,mBAAO5B;AADA;AADH;AADV,OADQ;AALe,KAAf,CAAZ;AAgBA,UAAM6B,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,yBAAiB;AAFV,OAFY;AAMrBC,MAAAA,IAAI,EAAEN;AANe,KAAvB,CAnBqB,CA4BrB;AACA;AACA;;AAEAO,IAAAA,KAAK,CAAC,6EAAD,EAAgFJ,cAAhF,CAAL,CACGK,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIA,QAAJ,EAAc;AACZF,QAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCH,UAAAA,MAAM,EAAE,KAD2B;AAEnCC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAF0B;AAGnCC,UAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAe;AACnBlB,YAAAA,EAAE,EAAEF,KAAK,CAACE;AADS,WAAf;AAH6B,SAAhC,CAAL;AAOD;AAEF,KAbH,EAcG2B,KAdH,CAcSC,KAAK,IAAIpB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBmB,KAArB,CAdlB;AAgBA;AACJ;AAEG,GAnDD;;AAqDA,sBAEE,QAAC,aAAD;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,cAAA,QAAQ,EAAEvB,QAAlB;AAA4B,cAAA,aAAa,EAAES;AAA3C;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAsB,YAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIC,CA1KD;;GAAM3B,G;;KAAAA,G;AA4KN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { BrowserRouter, Route, Routes, Link } from \"react-router-dom\";\nimport Profile from './components/Profile/Profile';\n\nconst App = () => {\n\n  const [imageURL, setURL] = useState('');\n\n  const [input, setInput] = useState('');\n\n  const [box, setBox] = useState({});\n\n  const [route, setRoute] = useState('signin');\n\n  const [isSignedIn, setSignedIn] = useState(false);\n\n  const [users, setUsers] = useState(\n    {\n      id: '',\n      name: '',\n      email: '',\n      entry: 0,\n      joined: ''\n    }\n  );\n\n  /* const LoadUser = (data) => {\n    setUsers({\n      ...users,\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }); */\n\n  const LoadUser = (data) => {\n    const updateUsers = [\n      ...users,\n      {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entry: data.entry,\n        joined: data.joined\n      }\n    ];\n\n    setUsers(updateUsers);\n  }\n\n\n  console.log('name', users.name);\n  console.log('entries', users.entry);\n  console.log('email', users.email);\n\n  /*  useEffect(()=>{\n     fetch('http://localhost:4000/')\n     .then(response=> response.json())\n     .then(data => console.log(data))\n   }) */\n\n\n\n  const onInputChange = (event) => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  }\n\n\n\n  const onRouteChange = (route) => {\n    if (route === 'signout') {\n      setSignedIn(false);\n    } else if (route === 'home') {\n      setSignedIn(true);\n    }\n    setRoute(route);\n  }\n\n  const onSubmit = () => {\n    setURL(input);\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"1028693\",\n        \"app_id\": \"bd6ab4db310c42dba83a7791fb6efa3b\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": input\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 2f27d84734af45cf9458d0dbab0c600d'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/a403429f2ddf4b49b307e318f00e528b/outputs\", requestOptions)\n      .then((response) => response.text())\n      .then((response) => {\n        if (response) {\n          fetch('http://localhost:4000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: users.id\n            })\n          })\n        }\n\n      })\n      .catch(error => console.log('error', error));\n\n    /* .then(result => console.log(JSON.parse(result, null, 2).outputs[0].data.regions[0]\n    .region_info.bounding_box)) */\n\n  }\n\n  return (\n\n    <BrowserRouter>\n   \n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\">\n            <Route index element={<Home />} />\n            <Route path=\"login\" element={<Signin LoadUser={LoadUser} onRouteChange={onRouteChange} />} />\n            <Route path=\"register\" element={<Register />} />\n            <Route path=\"profile\" element={<Profile />} />\n          </Route>\n        </Routes>\n      </div>\n    </BrowserRouter>\n\n\n  );\n\n\n /*  {\n    <div className=\"App\">\n\n    <Navigation isSignedIn={isSignedIn} onRouteChange={onRouteChange} />\n    {route === 'home'\n      ? <div>\n        <Home />\n      </div>\n      : (\n        route === 'signin'\n          ? <Signin LoadUser={LoadUser} onRouteChange={onRouteChange} />\n          : (route === 'signout'\n            ? <Signin onRouteChange={onRouteChange} />\n            : <Register LoadUser={LoadUser} onRouteChange={onRouteChange} />\n          )\n      )\n\n    }\n\n  </div>\n  } */\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}