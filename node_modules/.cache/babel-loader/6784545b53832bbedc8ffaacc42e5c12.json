{"ast":null,"code":"var _jsxFileName = \"/Users/felixyamano/Documents/NEU/CS5610/facerecognition/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\n/* import Particles from \"react-tsparticles\"; */\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  /* const particlesInit = (main) => {\n    console.log(main);\n     // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  };\n  const particlesLoaded = (container) => {\n    console.log(container);\n  }; */\n  const [imageURL, setURL] = useState('');\n  const [input, setInput] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [users, setUsers] = useState({\n    id: ' ',\n    name: ' ',\n    email: ' ',\n    entry: 0,\n    joined: ' '\n  });\n  const LoadUser = JSON.map(data => ({\n    id: data.id,\n    name: data.name,\n    email: data.email,\n    entry: data.entry,\n    joined: data.joined\n  }));\n  setUsers(previousData => [...previousData, ...LoadUser]);\n  /* const updateUsers = [\n    ...users,\n    {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }\n  ];\n   setUsers(updateUsers); */\n\n  console.log('name', users.name);\n  console.log('entries', users.entry);\n  console.log('email', users.email);\n  /*  useEffect(()=>{\n     fetch('http://localhost:4000/')\n     .then(response=> response.json())\n     .then(data => console.log(data))\n   }) */\n\n  const onInputChange = event => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  };\n\n  const calculateFaceLocation = data => {\n    const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log('width', width);\n    console.log('height', height);\n    console.log('leftColl', clarifaiFace.left_col);\n    console.log('TopRow', clarifaiFace.top_row);\n    console.log('right_col', clarifaiFace.right_col);\n    console.log('bottom_row', clarifaiFace.bottom_row);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = box => {\n    console.log(box);\n    setBox(box);\n  };\n\n  const onRouteChange = route => {\n    if (route === 'signout') {\n      setSignedIn(false);\n    } else if (route === 'home') {\n      setSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  const onSubmit = () => {\n    setURL(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"1028693\",\n        \"app_id\": \"bd6ab4db310c42dba83a7791fb6efa3b\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": input\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 2f27d84734af45cf9458d0dbab0c600d'\n      },\n      body: raw\n    }; // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/a403429f2ddf4b49b307e318f00e528b/outputs\", requestOptions).then(response => response.text()).then(result => displayFaceBox(calculateFaceLocation(result))).catch(error => console.log('error', error));\n    /* .then(result => console.log(JSON.parse(result, null, 2).outputs[0].data.regions[0]\n    .region_info.bounding_box)) */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: users.name,\n        entries: users.entry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: box,\n        imageURL: imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n      LoadUser: LoadUser,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }, this) : route === 'signout' ? /*#__PURE__*/_jsxDEV(Signin, {\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      LoadUser: LoadUser,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OOQ6793DFcF3ZH8M/119YTJbMbs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/felixyamano/Documents/NEU/CS5610/facerecognition/src/App.js"],"names":["React","useState","useEffect","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","App","imageURL","setURL","input","setInput","box","setBox","route","setRoute","isSignedIn","setSignedIn","users","setUsers","id","name","email","entry","joined","LoadUser","JSON","map","data","previousData","console","log","onInputChange","event","target","value","calculateFaceLocation","clarifaiFace","parse","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","left_col","top_row","right_col","bottom_row","leftCol","topRow","rightCol","bottomRow","displayFaceBox","onRouteChange","onSubmit","raw","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA;;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACF;AACA;AACA;AACA;AACA;AACA;AAGE,QAAM,CAACC,QAAD,EAAWC,MAAX,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,QAAD,CAAlC;AAEA,QAAM,CAACkB,UAAD,EAAaC,WAAb,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAChC;AACEsB,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,GAFR;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,KAAK,EAAE,CAJT;AAKEC,IAAAA,MAAM,EAAE;AALV,GADgC,CAAlC;AAUA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASC,IAAI,KAAK;AACjCR,IAAAA,EAAE,EAAEQ,IAAI,CAACR,EADwB;AAEjCC,IAAAA,IAAI,EAAEO,IAAI,CAACP,IAFsB;AAGjCC,IAAAA,KAAK,EAAEM,IAAI,CAACN,KAHqB;AAIjCC,IAAAA,KAAK,EAAEK,IAAI,CAACL,KAJqB;AAKjCC,IAAAA,MAAM,EAAEI,IAAI,CAACJ;AALoB,GAAL,CAAb,CAAjB;AAQAL,EAAAA,QAAQ,CAACU,YAAY,IAAI,CAAC,GAAGA,YAAJ,EAAkB,GAAGJ,QAArB,CAAjB,CAAR;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIEK,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,KAAK,CAACG,IAA1B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,KAAK,CAACK,KAA7B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBb,KAAK,CAACI,KAA3B;AAEA;AACF;AACA;AACA;AACA;;AAIE,QAAMU,aAAa,GAAIC,KAAD,IAAW;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAxB,IAAAA,QAAQ,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAHD;;AAKA,QAAMC,qBAAqB,GAAIR,IAAD,IAAU;AACtC,UAAMS,YAAY,GAAGX,IAAI,CAACY,KAAL,CAAWV,IAAX,EAAiB,IAAjB,EAAuB,CAAvB,EAA0BW,OAA1B,CAAkC,CAAlC,EAAqCX,IAArC,CAA0CY,OAA1C,CAAkD,CAAlD,EAClBC,WADkB,CACNC,YADf;AAEA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,UAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBe,KAArB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBiB,MAAtB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,YAAY,CAACY,QAArC;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,YAAY,CAACa,OAAnC;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,YAAY,CAACc,SAAtC;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,YAAY,CAACe,UAAvC;AAEA,WAAO;AACLC,MAAAA,OAAO,EAAEhB,YAAY,CAACY,QAAb,GAAwBH,KAD5B;AAELQ,MAAAA,MAAM,EAAEjB,YAAY,CAACa,OAAb,GAAuBF,MAF1B;AAGLO,MAAAA,QAAQ,EAAET,KAAK,GAAIT,YAAY,CAACc,SAAb,GAAyBL,KAHvC;AAILU,MAAAA,SAAS,EAAER,MAAM,GAAIX,YAAY,CAACe,UAAb,GAA0BJ;AAJ1C,KAAP;AAMD,GAnBD;;AAqBA,QAAMS,cAAc,GAAI7C,GAAD,IAAS;AAC9BkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AACAC,IAAAA,MAAM,CAACD,GAAD,CAAN;AAED,GAJD;;AAMA,QAAM8C,aAAa,GAAI5C,KAAD,IAAW;AAC/B,QAAIA,KAAK,KAAK,SAAd,EAAyB;AACvBG,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAEO,IAAIH,KAAK,KAAK,MAAd,EAAsB;AAC3BG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDF,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAPD;;AASA,QAAM6C,QAAQ,GAAG,MAAM;AACrBlD,IAAAA,MAAM,CAACC,KAAD,CAAN;AAEA,UAAMkD,GAAG,GAAGlC,IAAI,CAACmC,SAAL,CAAe;AACzB,qBAAe;AACb,mBAAW,SADE;AAEb,kBAAU;AAFG,OADU;AAKzB,gBAAU,CACR;AACE,gBAAQ;AACN,mBAAS;AACP,mBAAOnD;AADA;AADH;AADV,OADQ;AALe,KAAf,CAAZ;AAgBA,UAAMoD,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,yBAAiB;AAFV,OAFY;AAMrBC,MAAAA,IAAI,EAAEL;AANe,KAAvB,CAnBqB,CA4BrB;AACA;AACA;;AAEAM,IAAAA,KAAK,CAAC,6EAAD,EAAgFJ,cAAhF,CAAL,CACGK,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,MAAM,IAAIb,cAAc,CAACrB,qBAAqB,CAACkC,MAAD,CAAtB,CAFhC,EAGGC,KAHH,CAGSC,KAAK,IAAI1C,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqByC,KAArB,CAHlB;AAKA;AACJ;AAEG,GAxCD;;AA0CA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAgFE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAExD,UAAxB;AAAoC,MAAA,aAAa,EAAE0C;AAAnD;AAAA;AAAA;AAAA;AAAA,YAhFF,EAiFG5C,KAAK,KAAK,MAAV,gBACG;AAAA,mCAAM,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAN,eACA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEI,KAAK,CAACG,IAAlB;AAAwB,QAAA,OAAO,EAAEH,KAAK,CAACK;AAAvC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,aAAD;AAAe,QAAA,aAAa,EAAES,aAA9B;AAA6C,QAAA,QAAQ,EAAE2B;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAE/C,GAAtB;AAA2B,QAAA,QAAQ,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAOGM,KAAK,KAAK,QAAV,gBACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEW,QAAlB;AAA4B,MAAA,aAAa,EAAEiC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,GAEK5C,KAAK,KAAK,SAAV,gBACC,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAE4C;AAAvB;AAAA;AAAA;AAAA;AAAA,YADD,gBAEC,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEjC,QAApB;AAA8B,MAAA,aAAa,EAAEiC;AAA7C;AAAA;AAAA;AAAA;AAAA,YA5FZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqGD,CA1PD;;GAAMnD,G;;KAAAA,G;AA4PN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\n/* import Particles from \"react-tsparticles\"; */\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nconst App = () => {\n  /* const particlesInit = (main) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  };\n  const particlesLoaded = (container) => {\n    console.log(container);\n  }; */\n\n  const [imageURL, setURL] = useState('');\n\n  const [input, setInput] = useState('');\n\n  const [box, setBox] = useState({});\n\n  const [route, setRoute] = useState('signin');\n\n  const [isSignedIn, setSignedIn] = useState(false);\n\n  const [users, setUsers] = useState(\n    {\n      id: ' ',\n      name: ' ',\n      email: ' ',\n      entry: 0,\n      joined: ' '\n    }\n  );\n\n  const LoadUser = JSON.map(data => ({\n    id: data.id,\n    name: data.name,\n    email: data.email,\n    entry: data.entry,\n    joined: data.joined,\n  }));\n\n  setUsers(previousData => [...previousData, ...LoadUser]);\n\n  /* const updateUsers = [\n    ...users,\n    {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entry: data.entry,\n      joined: data.joined\n    }\n  ];\n\n  setUsers(updateUsers); */\n\n\n  console.log('name', users.name);\n  console.log('entries', users.entry);\n  console.log('email', users.email);\n\n  /*  useEffect(()=>{\n     fetch('http://localhost:4000/')\n     .then(response=> response.json())\n     .then(data => console.log(data))\n   }) */\n\n\n\n  const onInputChange = (event) => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  }\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0]\n      .region_info.bounding_box;\n    const image = document.getElementById(\"image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log('width', width);\n    console.log('height', height);\n    console.log('leftColl', clarifaiFace.left_col);\n    console.log('TopRow', clarifaiFace.top_row);\n    console.log('right_col', clarifaiFace.right_col);\n    console.log('bottom_row', clarifaiFace.bottom_row);\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    };\n  }\n\n  const displayFaceBox = (box) => {\n    console.log(box);\n    setBox(box);\n\n  }\n\n  const onRouteChange = (route) => {\n    if (route === 'signout') {\n      setSignedIn(false);\n    } else if (route === 'home') {\n      setSignedIn(true);\n    }\n    setRoute(route);\n  }\n\n  const onSubmit = () => {\n    setURL(input);\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"1028693\",\n        \"app_id\": \"bd6ab4db310c42dba83a7791fb6efa3b\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": input\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 2f27d84734af45cf9458d0dbab0c600d'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/a403429f2ddf4b49b307e318f00e528b/outputs\", requestOptions)\n      .then((response) => response.text())\n      .then(result => displayFaceBox(calculateFaceLocation(result)))\n      .catch(error => console.log('error', error));\n\n    /* .then(result => console.log(JSON.parse(result, null, 2).outputs[0].data.regions[0]\n    .region_info.bounding_box)) */\n\n  }\n\n  return (\n    <div className=\"App\">\n      {/*  <Particles className='particles'\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={{\n          fpsLimit: 120,\n          interactivity: {\n            events: {\n              onClick: {\n                enable: true,\n                mode: \"push\",\n              },\n              onHover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              bubble: {\n                distance: 400,\n                duration: 2,\n                opacity: 0.8,\n                size: 40,\n              },\n              push: {\n                quantity: 4,\n              },\n              repulse: {\n                distance: 200,\n                duration: 0.4,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#ffffff\",\n            },\n            links: {\n              color: \"#ffffff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1,\n            },\n            collisions: {\n              enable: true,\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 2,\n              straight: false,\n            },\n            number: {\n              density: {\n                enable: true,\n                area: 800,\n              },\n              value: 80,\n            },\n            opacity: {\n              value: 0.5,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              random: true,\n              value: 5,\n            },\n          },\n          detectRetina: true,\n        }}\n\n      /> */}\n\n      <Navigation isSignedIn={isSignedIn} onRouteChange={onRouteChange} />\n      {route === 'home'\n        ? <div> <Logo />\n          <Rank name={users.name} entries={users.entry} />\n          <ImageLinkForm onInputChange={onInputChange} onSubmit={onSubmit} />\n          <FaceRecognition box={box} imageURL={imageURL} />\n        </div>\n        : (\n          route === 'signin'\n            ? <Signin LoadUser={LoadUser} onRouteChange={onRouteChange} />\n            : (route === 'signout'\n              ? <Signin onRouteChange={onRouteChange} />\n              : <Register LoadUser={LoadUser} onRouteChange={onRouteChange} />\n            )\n        )\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}